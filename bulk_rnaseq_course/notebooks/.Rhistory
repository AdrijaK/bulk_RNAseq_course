sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
rownames(sampleDistMatrix) <- paste(vsd$drug_treatment,vsd$cell_line, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col)
annot_col
colnames(vsd)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
#rownames(sampleDistMatrix) <- paste(vsd$drug_treatment,vsd$cell_line, sep="-")
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col)
sampleDistMatrix
annot_col
sampleDistMatrix
annot_col <- t(colData(vsd)[,c("cell_line","drug_treatment")])
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col)
annot_col
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
#rownames(sampleDistMatrix) <- paste(vsd$drug_treatment,vsd$cell_line, sep="-")
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
annot_col
sampleDistMatrix
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
#rownames(sampleDistMatrix) <- paste(vsd$drug_treatment,vsd$cell_line, sep="-")
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_row = annot_col)
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_row = annot_col)
rownames(sampleDistMatrix)
rownames(sampleDistMatrix) %in% rownames(annot_col)
rownames(sampleDistMatrix) %in% rownames(annot_row)
colnames(sampleDistMatrix) %in% rownames(annot_col)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)#, annotation_row = annot_col)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- colData(vsd)[,c("cell_line","drug_treatment")]
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_row = annot_col)
annotation_row = data.frame(
GeneClass = factor(rep(c("Path1", "Path2", "Path3"), c(10, 4, 6)))
)
rownames(annotation_row) = paste("Gene", 1:20, sep = "")
View(annotation_row)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_row = annot_col)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col, show_rownames = F, show_colnames = F)
unique(annot_col)
unique(annot_col$cell_line)
brewer.pal(n = 5, )
display.brewer.all()
unique(annot_col$drug_treatment)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list("cell_line" = brewer.pal(n = 5, name = "Set1"),
"drug_treatment"= brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col, show_rownames = F, show_colnames = F)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list("cell_line" = brewer.pal(n = 5, name = "Set1"),
"drug_treatment"= brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors, annotation_col = annot_col, show_rownames = F, show_colnames = F)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list("cell_line" = brewer.pal(n = 5, name = "Set1"),
"drug_treatment"= brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
ann_colors
annot_col
length(unique(annot_col$cell_line))
View(annot_col)
annot_col$cell_line <- factor(annot_col$cell_line)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list("cell_line" = brewer.pal(n = 5, name = "Set1"),
"drug_treatment"= brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
ann_colors
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set1"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set1"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors[1])
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set1"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors[2])
annotation_col
annot_col
list(
Time = c("white", "firebrick"),
CellType = c(CT1 = "#1B9E77", CT2 = "#D95F02"),
GeneClass = c(Path1 = "#7570B3", Path2 = "#E7298A", Path3 = "#66A61E")
)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set1"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
names(ann_colors$cell_line) <- unique(annot_col$cell_line)
names(ann_colors$drug_treatment) <- unique(annot_col$drug_treatment)
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
display.brewer.all()
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set2"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
names(ann_colors$cell_line) <- unique(annot_col$cell_line)
names(ann_colors$drug_treatment) <- unique(annot_col$drug_treatment)
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
pcaData <- plotPCA(vsd, intgroup=c("drug_treatment", "cell_line"), returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=drug_treatment, shape = cell_line)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed() + theme_bw()
ntop <- 20
select <- order(rowSds(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:ntop]
df <- data.frame(row.names = rownames(colData(dds)),group = colData(dds)[,c("drug_treatment")])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=FALSE, scale = "row",
cluster_cols=TRUE, annotation_col=df)
ntop <- 20
select <- order(rowSds(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:ntop]
df <- data.frame(row.names = rownames(colData(dds)), drug_treatment = colData(dds)[,c("drug_treatment")])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=FALSE, scale = "row",
cluster_cols=TRUE, annotation_col=df)
DOCNAME = knitr::current_input()
knitr::opts_chunk$set(autodep        = TRUE,
cache          = FALSE,
cache.path     = paste0("cache/", DOCNAME, "/"),
cache.comments = TRUE,
echo           = TRUE,
error          = FALSE,
fig.align      = "center",
fig.path       = paste0("../reports/figures/", DOCNAME, "/"),
fig.width      = 10,
fig.height     = 8,
message        = FALSE,
warning        = FALSE)
library(DESeq2)
library(tidyverse)
library(RColorBrewer)
library(pheatmap)
library(gprofiler2)
cts <- data.frame(read.csv(file = "../data/SRP051765_cts.tsv", sep = "\t", row.names = "ensembl_id"))
coldata <- data.frame(read.csv(file = "../data/SRP051765_metadata.tsv", sep = "\t", row.names = "ID"))
head(cts)
head(coldata)
coldata$drug_treatment <- factor(coldata$drug_treatment)
paste("The order of the conditions is:", paste(unique(coldata$drug_treatment), collapse=", "))
coldata$cell_line <- factor(coldata$cell_line)
coldata$drug_treatment <- relevel(coldata$drug_treatment, ref = "control") #Specifies "non_tumor" as the reference level
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ drug_treatment)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds)
head(data.frame(res))
mcols(res)$description
res <- results(dds, contrast=c("drug_treatment","treat1","control"))
#head(data.frame(res))
resultsNames(dds)
res <- results(dds, name="drug_treatment_treat1_vs_control")
#head(data.frame(res))
res$padj[is.na(res$padj)] <- 1
results_summary <- function(x, alpha = 0.05, LFC = 1) {
ngenes <- nrow(x)
signif <- sum(x$padj < alpha, na.rm = T)
up <- sum(x$padj < alpha & x$log2FoldChange > LFC, na.rm = T)
down <- sum(x$padj < alpha & x$log2FoldChange < -LFC, na.rm = T)
results <- c(paste0("Number of genes: ", ngenes),
paste0("Number of genes with adjusted p-value < ",alpha,": ", signif, " (", round((signif/ngenes)*100,digits = 2),"%)"),
"  Of those:",
paste0("    with LFC < ", -LFC, ": ", down, " (", round((down/ngenes)*100,digits = 2),"%)"),
paste0("    with LFC > ", LFC, ": ", up, " (", round((up/ngenes)*100,digits = 2),"%)"))
writeLines(paste(results, collapse = "\n"))
return(paste(results, collapse = "\n"))
}
res_summary <- results_summary(res, alpha = 0.05, LFC = 1)
LFC <- 1
adj_pvalue <- 0.05
sig_res <- data.frame(res[res$padj < adj_pvalue & abs(res$log2FoldChange) > LFC,])
#write.table(x = sig_res, "./significant_results.tsv", quote = F, col.names = T, row.names = T, sep = "\t")
d <- plotCounts(dds, gene=which.min(res$padj), intgroup=c("drug_treatment", "cell_line"),
returnData=TRUE)
ggplot(d, aes(x=drug_treatment, y=count, color = drug_treatment, shape = cell_line)) +
geom_point(position=position_jitter(w=0.1,h=0)) +
scale_y_log10(breaks=c(25,100,400)) + theme_bw()
vsd <- vst(dds) #Variance Stabilizing Transformation, vst is faster with larger number of samples
#rld <- rlog(dds) #Regularized
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
annot_col <- data.frame(colData(vsd)[,c("cell_line","drug_treatment")])
ann_colors <- list(cell_line = brewer.pal(n = 5, name = "Set2"),
drug_treatment = brewer.pal(n = 6, name = "Dark2"))
names(ann_colors$cell_line) <- unique(annot_col$cell_line)
names(ann_colors$drug_treatment) <- unique(annot_col$drug_treatment)
rownames(sampleDistMatrix) <- colnames(vsd)
colnames(sampleDistMatrix) <- colnames(vsd)
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pheatmap(sampleDistMatrix, col=colors,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
show_rownames = F, show_colnames = F,
annotation_col = annot_col, annotation_colors = ann_colors)
pcaData <- plotPCA(vsd, intgroup=c("drug_treatment", "cell_line"), returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=drug_treatment, shape = cell_line)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed() + theme_bw()
ntop <- 20
select <- order(rowSds(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:ntop]
df <- data.frame(row.names = rownames(colData(dds)), drug_treatment = colData(dds)[,c("drug_treatment")])
pheatmap(assay(vsd)[select,], cluster_rows=T, show_rownames=FALSE, scale = "row",
cluster_cols=TRUE, annotation_col=df)
ntop <- 20
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:ntop]
df <- data.frame(row.names = rownames(colData(dds)), drug_treatment = colData(dds)[,c("drug_treatment")])
pheatmap(assay(vsd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=TRUE, annotation_col=df)
select <- rownames(sig_res)
df <- data.frame(row.names = rownames(colData(dds)), drug_treatment = colData(dds)[,c("drug_treatment")])
pheatmap(assay(vsd)[rownames(vsd) %in% select,], cluster_rows=TRUE, show_rownames=FALSE, scale = "row",
cluster_cols=TRUE, annotation_col=df)
resLFC <- lfcShrink(dds, coef="drug_treatment_treat1_vs_control", type="apeglm")
resLFC$padj[is.na(resLFC$padj)] <- 1
alpha <- 0.05
ggplot(data.frame(resLFC)) + theme_bw() +
labs(title = "MA plot", subtitle = res_summary,
color = paste0("Adjusted p-value < ",alpha)) +
geom_point(aes(x = log10(baseMean), y = log2FoldChange,
color = factor((padj < alpha), levels = c("TRUE","FALSE"))), size = 1)
alpha = 0.05
LFC = 1
ggplot(data.frame(resLFC)) + theme_bw() +
labs(color ="Significant genes", title = "Volcano plot", subtitle = res_summary) +
geom_hline(yintercept = -log10(alpha), linetype = "dashed") +
geom_vline(xintercept = c(-LFC,LFC), linetype = "dashed") +
geom_point(aes(x = log2FoldChange, y = -log10(padj),
color = factor((padj < alpha & abs(log2FoldChange) > LFC), levels = c("TRUE","FALSE"))), size = 1)
gostres <- gost(query = rownames(sig_res), organism = "hsapiens", ordered_query = FALSE, significant = FALSE,
measure_underrepresentation = FALSE, user_threshold = 0.05,
domain_scope = "annotated", numeric_ns = "", sources = NULL)
head(gostres$result)
names(gostres$meta)
#gostplot(gostres, capped = TRUE, interactive = TRUE)
p <- gostplot(gostres, capped = FALSE, interactive = FALSE)
multi_gostres1 <- gost(query = list("UP_genes" = rownames(sig_res %>% filter(log2FoldChange > 1)),
"DOWN_genes" = rownames(sig_res %>% filter(log2FoldChange < -1))),
multi_query = FALSE)
head(multi_gostres1$result, 5)
gostplot(multi_gostres2, capped = TRUE, interactive = FALSE)
multi_gostres2 <- gost(query = list("UP_genes" = rownames(sig_res %>% filter(log2FoldChange > 1)),
"DOWN_genes" = rownames(sig_res %>% filter(log2FoldChange < -1))),
multi_query = TRUE)
head(multi_gostres2$result, 5)
rownames(csts)
rownames(cts)
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ drug_treatment + cell_line + drug_treatment:cell_line)
View(coldata)
DOCNAME = knitr::current_input()
knitr::opts_chunk$set(autodep        = TRUE,
cache          = FALSE,
cache.path     = paste0("cache/", DOCNAME, "/"),
cache.comments = TRUE,
echo           = TRUE,
error          = FALSE,
fig.align      = "center",
fig.path       = paste0("../reports/figures/", DOCNAME, "/"),
fig.width      = 10,
fig.height     = 8,
message        = FALSE,
warning        = FALSE)
library(DESeq2)
library(tidyverse)
library(RColorBrewer)
library(pheatmap)
library(gprofiler2)
cts <- data.frame(read.csv(file = "../data/SRP051765_cts.tsv", sep = "\t", row.names = "ensembl_id"))
coldata <- data.frame(read.csv(file = "../data/SRP051765_metadata.tsv", sep = "\t", row.names = "ID"))
head(cts)
head(coldata)
paste0(coldata$cell_line, coldata$drug_treatment, collapse = "-")
coldata$condition <- paste(coldata$cell_line, coldata$drug_treatment, sep = "-")
paste(coldata$cell_line, coldata$drug_treatment, sep = "-")
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "-"))
coldata$condition <- relevel(coldata$condition, "A375-control")
paste("The order of the conditions is:", paste(unique(coldata$condition), collapse=", "))
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "-"))
coldata$condition <- relevel(coldata$condition, ref = "A375-control")
paste("The order of the conditions is:", paste(unique(coldata$condition), collapse=", "))
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "-"))
coldata$condition <- relevel(coldata$condition, ref = "A375-control")
paste("The order of the conditions is:", paste(levels(coldata$condition), collapse=", "))
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ condition)
dds
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "."))
coldata$condition <- relevel(coldata$condition, ref = "A375-control")
DOCNAME = knitr::current_input()
knitr::opts_chunk$set(autodep        = TRUE,
cache          = FALSE,
cache.path     = paste0("cache/", DOCNAME, "/"),
cache.comments = TRUE,
echo           = TRUE,
error          = FALSE,
fig.align      = "center",
fig.path       = paste0("../reports/figures/", DOCNAME, "/"),
fig.width      = 10,
fig.height     = 8,
message        = FALSE,
warning        = FALSE)
library(DESeq2)
library(tidyverse)
library(RColorBrewer)
library(pheatmap)
library(gprofiler2)
cts <- data.frame(read.csv(file = "../data/SRP051765_cts.tsv", sep = "\t", row.names = "ensembl_id"))
coldata <- data.frame(read.csv(file = "../data/SRP051765_metadata.tsv", sep = "\t", row.names = "ID"))
head(cts)
head(coldata)
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "."))
coldata$condition <- relevel(coldata$condition, ref = "A375-control")
DOCNAME = knitr::current_input()
knitr::opts_chunk$set(autodep        = TRUE,
cache          = FALSE,
cache.path     = paste0("cache/", DOCNAME, "/"),
cache.comments = TRUE,
echo           = TRUE,
error          = FALSE,
fig.align      = "center",
fig.path       = paste0("../reports/figures/", DOCNAME, "/"),
fig.width      = 10,
fig.height     = 8,
message        = FALSE,
warning        = FALSE)
library(DESeq2)
library(tidyverse)
library(RColorBrewer)
library(pheatmap)
library(gprofiler2)
cts <- data.frame(read.csv(file = "../data/SRP051765_cts.tsv", sep = "\t", row.names = "ensembl_id"))
coldata <- data.frame(read.csv(file = "../data/SRP051765_metadata.tsv", sep = "\t", row.names = "ID"))
head(cts)
head(coldata)
coldata$condition <- factor(paste(coldata$cell_line, coldata$drug_treatment, sep = "."))
coldata$condition <- relevel(coldata$condition, ref = "A375.control")
paste("The order of the conditions is:", paste(levels(coldata$condition), collapse=", "))
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ condition)
dds
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds)
head(data.frame(res))
